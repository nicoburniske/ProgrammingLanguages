Total: 120/110

-5 interpreter; Input: ["call",["fun*",["resume"],[["let","gen","=",["fun*",["x"],["call",["call","!","resume"],"x"]]],["let","pythn","=",["fun*",["x"],["if-0","x",111,["call",["fun*",["a","aa"],"a"],["call","pythn",["call","+","x",-1]],["call","yield","x"]]]]],["let","using","=",["fun*",["f"],["call","+",["call","f",33],["call","+",["call","f",33],["call","f",2]]]]],["let","yield","=",["fun*",["y"],["grab","c",["call",["call","=","resume",["call","enter","c"]],"y"]]]],["let","enter","=",["fun*",["c"],["fun*",["z"],["grab","k",["call",["fun*",["a","aa"],"a"],["call","c","z"],["call","=","resume",["call","enter","k"]]]]]]],["call",["fun*",["a","aa"],"a"],["call","using","gen"],["call","=","resume",["call","enter",["fun*",["x"],["stop",["call","pythn","x"]]]]]]]],["call","@",0]]; Expected: 111
; Got: "number of arguments does not match number of parameters"

-5 interpreter; Input: ["call",["fun*",["resume"],[["let","gen","=",["fun*",["x"],["call",["call","!","resume"],"x"]]],["let","pythn","=",["fun*",["x"],["if-0","x",111,["call",["fun*",["a","aa"],"a"],["call","pythn",["call","+","x",-1]],["call","yield","x"]]]]],["let","using","=",["fun*",["f"],["call","+",["call","f",33],["call","+",["call","f",33],["call","f",10]]]]],["let","yield","=",["fun*",["y"],["grab","c",["call",["call","=","resume",["call","enter","c"]],"y"]]]],["let","enter","=",["fun*",["c"],["fun*",["z"],["grab","k",["call",["fun*",["a","aa"],"a"],["call","c","z"],["call","=","resume",["call","enter","k"]]]]]]],["call",["fun*",["a","aa"],"a"],["call","using","gen"],["call","=","resume",["call","enter",["fun*",["x"],["stop",["call","pythn","x"]]]]]]]],["call","@",0]]; Expected: 27
; Got: "number of arguments does not match number of parameters"

-5, for your test 1-in.json; got parse: bad Int 420
  context...:
   /usr/share/racket/collects/racket/private/map.rkt:35:13: map
   /usr/share/racket/collects/racket/match/compiler.rkt:418:15: parse-loop51
   /usr/share/racket/collects/racket/private/map.rkt:35:13: map
   /usr/share/racket/collects/racket/match/compiler.rkt:418:15: parse-loop51
   /usr/share/racket/collects/racket/private/map.rkt:35:13: map
   /usr/share/racket/collects/racket/match/compiler.rkt:418:15: parse-loop51
   /usr/share/racket/collects/racket/match/compiler.rkt:507:40: f11
   /usr/share/racket/collects/racket/private/map.rkt:35:13: map
   /usr/share/racket/collects/racket/match/compiler.rkt:418:15: parse-loop87
   /usr/share/racket/collects/racket/match/compiler.rkt:507:40: f11
   /usr/share/racket/collects/racket/match/compiler.rkt:418:15: parse-loop23
   /home/vagrant/src/20PL/Code/10/Other/data-rep.rkt:86:0: parse4
   /home/vagrant/src/20PL/Code/10/Other/data-rep.rkt:127:0: parse-decl
   /usr/share/racket/collects/racket/private/map.rkt:35:13: map
   /usr/share/racket/collects/racket/match/compiler.rkt:507:40: f131
   /home/vagrant/src/20PL/Code/10/Other/data-rep.rkt:86:0: parse4
   ...

+25 Bonus for your tests
===============
Code Inspection
===============
Inspection Scores Forthcoming

===============
Test Fest
===============
interpreter: Failed ["call", ["fun*", ["resume"],
    [["let", "gen",   "=", ["fun*", ["x"], [ "call", [ "call", "!", "resume"], "x"]]],
     ["let", "pythn", "=", ["fun*", ["x"],
			     ["if-0", "x",
			       111,
			       ["seq*",
				 ["call", "yield", "x"],
				 ["call", "pythn", [ "call", "+", "x", -1]]]]]],
     ["let", "using", "=", ["fun*", ["f"],
			     ["call", "+",
			       ["call", "f", 33],
			       ["call", "+",
				 [ "call", "f", 33],
				 [ "call", "f", 2]]]]],


     ["let", "yield", "=", ["fun*", ["y"],
			     [ "grab", "c",
				["call",
				  ["call", "=", "resume", ["call","enter","c"]],
				  "y"]]]],

     ["let", "enter", "=", ["fun*", ["c"],
			     [ "fun*", ["z"],
				["grab","k",
				  ["seq*",
				    ["call","=","resume", ["call","enter","k"]],
				    ["call", "c", "z"]]]]]],
     ["seq*",
       ["call", "=", "resume", [ "call", "enter", [ "fun*", [ "x"], [ "stop", [ "call", "pythn", "x"]]]]],

       ["call", "using", "gen"]]]],
  ["call", "@", 0]]
, Expected 111
, Got "number of arguments does not match number of parameters"

interpreter: Failed ["if-0", ["fun*", ["x"], "x"], 1, 2]
, Expected 2
, Got interpreter.value.ValueClosure cannot be cast to interpreter.value.ValueInt

interpreter: Failed [["let","even","=",["fun*",["n"],["if-0","n","n",["call","+",1,["call","*",-1,["call","even",["call","+","n",-1]]]]]]],["let","half","=",["fun*",["n"],["if-0","n","n",["call","+",1,["call","half",["call","+","n",-2]]]]]],["let","c","=",["fun*",["k"],["if-0",["call","+","k",-1],1,["call","+",1,["if-0",["call","even","k"],["call","c",["call","half","k"]],["call","c",["call","+",1,["call","*",3,"k"]]]]]]]],["call","c",19]]
, Expected 21, Got interpreter.value.ValueClosure cannot be cast to interpreter.value.ValueInt

interpreter: Failed ["call",["fun*",["c"],["seq*",["call","=","c",["grab","done",["if-0",["call","!","c"],0,"done"]]],["if-0",["call","!","c"],42,["call",["call","!","c"],0]]]],["call","@",["fun*",["x"],"x"]]]
, Expected 42
, Got interpreter.value.ValueClosure cannot be cast to interpreter.value.ValueInt

interpreter: Failed ["call",["fun*",["resume"],[["let","gen","=",["fun*",["x"],["call",["call","!","resume"],"x"]]],["let","pythn","=",["fun*",["x"],["if-0","x",111,["seq*",["call","yield","x"],["call","pythn",["call","+","x",-1]]]]]],["let","using","=",["fun*",["f"],["call","+",["call","f",33],["call","+",["call","f",33],["call","f",3]]]]],["let","yield","=",["fun*",["y"],["grab","c",["call",["call","=","resume",["call","enter","c"]],"y"]]]],["let","enter","=",["fun*",["c"],["fun*",["z"],["grab","k",["seq*",["call","=","resume",["call","enter","k"]],["call","c","z"]]]]]],["seq*",["call","=","resume",["call","enter",["fun*",["x"],["stop",["call","pythn","x"]]]]],["call","using","gen"]]]],["call","@",0]]
, Expected 6
, Got "number of arguments does not match number of parameters"

interpreter: Failed [
    ["let", "math", "=", ["fun*", ["k", "continuati"],
                          ["call", "*", 3,
                           ["call", "*",
                            ["call", "+", "k", "k"],
                            ["call", "+", "continuati", "continuati"]]]]],
    ["call", "math", 2, 3]
]
, Expected 72
, Got interpreter.value.ValueClosure cannot be cast to interpreter.value.ValueInt

interpreter: Failed ["call", ["fun*", ["resume"],
    [["let", "gen",   "=", ["fun*", ["x"], [ "call", [ "call", "!", "resume"], "x"]]],
     ["let", "pythn", "=", ["fun*", ["x"],
			     ["if-0", "x",
			       111,
			       ["seq*",
				 ["call", "yield", "x"], 
				 ["call", "pythn", [ "call", "+", "x", -1]]]]]],
     ["let", "using", "=", ["fun*", ["f"], 
			     ["call", "+",
			       ["call", "f", 33], 
			       ["call", "+",
				 [ "call", "f", 33], 
				 [ "call", "f", 100]]]]],


     ["let", "yield", "=", ["fun*", ["y"],
			     [ "grab", "c",
				["call",
				  ["call", "=", "resume", ["call","enter","c"]],
				  "y"]]]],

     ["let", "enter", "=", ["fun*", ["c"],
			     [ "fun*", ["z"],
				["grab","k",
				  ["seq*",
				    ["call","=","resume", ["call","enter","k"]], 
				    ["call", "c", "z"]]]]]],
     ["seq*",
       ["call", "=", "resume", [ "call", "enter", [ "fun*", [ "x"], [ "stop", [ "call", "pythn", "x"]]]]], 

       ["call", "using", "gen"]]]],
  ["call", "@", 0]]
, Expected 297
, Got "number of arguments does not match number of parameters"

interpreter: Failed ["call",["fun*",["cell"],["call",["fun*", ["a", "b"], "a"],
  ["if-0", ["call", "!", "cell"], 42,["call", ["call", "!", "cell"], 0]],
  ["call","=","cell",["grab", "done",["if-0", ["call", "!", "cell"], 0,"done"]]]]],
  ["call", "@", ["fun*", ["x"], "x"]]], Expected 42, Got interpreter.value.ValueClosure cannot be cast to interpreter.value.ValueInt

interpreter: Failed ["call", "!", 1], Expected "primop domain error", Got interpreter.value.ValueInt cannot be cast to interpreter.value.ValueCell

interpreter: Failed ["call", 
["fun*", ["cell"], 
  ["seq*",
    ["call", "=", "cell", ["grab", "done", "done"]],
    ["if-0",
      ["call", "!", "cell"],      
      ["stop", ["call", "!", "cell"]],
      ["call", ["call", "!", "cell"], 0]]]],
["call", "@", 0]
], Expected 0, Got interpreter.pal.Decl$$Lambda$22/1650967483 cannot be cast to interpreter.value.ValueInt

interpreter: Failed ["call", 
  ["fun*", ["cell"], 
    ["seq*",
      ["call", "=", "cell", ["grab", "done", ["if-0", ["call", "!", "cell"], 0, "done"]]],
      ["if-0", ["call", "!", "cell"], 42, ["call", ["call", "!", "cell"], 0]]]],
  ["call", "@", ["fun*", ["x"], "x"]]], Expected 42, Got interpreter.value.ValueClosure cannot be cast to interpreter.value.ValueInt

interpreter: Failed ["if-0",[["let","func","=",["fun*",[],0]],"func"], 10, 5], Expected 5, Got interpreter.pal.Decl$$Lambda$17/396180261 cannot be cast to interpreter.value.ValueInt

interpreter: Failed ["call", "+", 1, ["fun*", [], 1]], Expected "primop domain error", Got interpreter.value.ValueClosure cannot be cast to interpreter.value.ValueInt

interpreter: Failed ["call", ["fun*", ["resume"],
  [["let", "gen",   "=", ["fun*", ["x"], [ "call", [ "call", "!", "resume"], "x"]]],
    ["let", "pythn", "=", ["fun*", ["x"],
      ["if-0", "x",
        111,
        ["seq*",
          ["call", "yield", "x"],
          ["call", "pythn", [ "call", "+", "x", -1]]]]]],
    ["let", "using", "=", ["fun*", ["f"],
      ["call", "+",
        ["call", "f", 33],
        ["call", "+",
          [ "call", "f", 33],
          [ "call", "f", 3]]]]],

    ["let", "yield", "=", ["fun*", ["y"],
      [ "grab", "c",
        ["call",
          ["call", "=", "resume", ["call","enter","c"]],
          "y"]]]],

    ["let", "enter", "=", ["fun*", ["c"],
      [ "fun*", ["z"],
        ["grab","k",
          ["seq*",
            ["call","=","resume", ["call","enter","k"]],
            ["call", "c", "z"]]]]]],
    ["seq*",
      ["call", "=", "resume", [ "call", "enter", [ "fun*", [ "x"], [ "stop", [ "call", "pythn", "x"]]]]],

      ["call", "using", "gen"]]]],
  ["call", "@", 0]], Expected 6, Got "number of arguments does not match number of parameters"
